name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-18.04

    services:
      mongodb:
        image: mongo:4.0
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.19.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.19.x

      - name: Get release version
        id: get_release_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      # https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Main - Install dependencies
        run: |
          yarn install

      - name: Api - Build
        run: |
          cd api
          rm -rf node_modules
          yarn install --production
          yarn build

      - name: Prepare release assets
        run: |
          mkdir build
          mkdir build-local

          rm -rf node_modules

          mv api/dist build/api
          mv api/node_modules api/package.json build/api

          cp -a build/. build-local

          tar -zcf erxes-${GITHUB_REF#refs/tags/}.tar.gz build
          tar -zcf erxes-${GITHUB_REF#refs/tags/}-local.tar.gz build-local

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            erxes-${{ steps.get_release_version.outputs.VERSION }}.tar.gz
            erxes-${{ steps.get_release_version.outputs.VERSION }}-local.tar.gz
          name: Release ${{ steps.get_release_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
